import numpy as np

def Runge-kutta(f,y,N):
  for i in range(N - 1):
    k1_q1, k1_q2, k1_p1, k1_p2 = f(y[i])
    k2_q1, k2_q2, k2_p1, k2_p2 = f([y[i][0] + 0.5 * h *k1_q1, y[i][1] + 0.5 * h * k1_q2, y[i][2] + 0.5 * h * k1_p1, y[i][3] + 0.5 * h *k1_p2])
    k3_q1, k3_q2, k3_p1, k3_p2 = f([y[i][0] + 0.5 * h * k2_q1, y[i][1] + 0.5 * h * k2_q2, y[i][2] + 0.5 * h *k2_p1, y[i][3] + 0.5 * h * k2_p2])
    k4_q1, k4_q2, k4_p1, k4_p2 = f([y[i][0] + h * k3_q1, y[i][1] + h * k3_q2, y[i][2] + h * k3_p1, y[i][3] + h * k3_p2])

    y[i + 1][0] = y[i][0] + (h / 6) * (k1_q1 + 2 * k2_q1 + 2 * k3_q1 + k4_q1)
    y[i + 1][1] = y[i][1] + (h / 6) * (k1_q2 + 2 * k2_q2 + 2 * k3_q2 + k4_q2)
    y[i + 1][2] = y[i][2] + (h / 6) * (k1_p1 + 2 * k2_p1 + 2 * k3_p1 + k4_p1)
    y[i + 1][3] = y[i][3] + (h / 6) * (k1_p2 + 2 * k2_p2 + 2 * k3_p2 + k4_p2)

return y
